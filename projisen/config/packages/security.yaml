security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: bcrypt
        App\Entity\Student:
            algorithm: bcrypt
            cost: 12
        App\Entity\Staff:
            algorithm: bcrypt
            cost: 12
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_student:
            entity:
                class: App\Entity\Student
                property: username
        app_staff:
            entity:
                class: App\Entity\Staff
                property: username
        app_users:
            chain:
                providers: ['app_student','app_staff']
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_users
            login_throttling:
                max_attempts: 3
            form_login:
                login_path: app.login
                check_path: app.login
            logout:
                path: app.logout
                target: logout
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/teacher, roles: ROLE_TEACHER }
        - { path: ^/student, roles: ROLE_STUDENT }
        - { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER,ROLE_TEACHER]
        ROLE_TEACHER: [ROLE_USER]
        ROLE_STUDENT: [ROLE_USER]
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
